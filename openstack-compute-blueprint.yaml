tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml
  - openstack-network-blueprint.yaml
#  - openstack-storage-blueprint.yaml

inputs:

  openstack_image_id:
    type: string
    default: ''

  flavor_id:
    type: string
    default: ''

  use_existing_keypair:
    type: boolean
    default: false

  keypair_name:
    type: string
    default: generic-openstack-key

  openstack_ssh_key_filename:
    type: string
    default: ~/.ssh/generic-openstack-key.pem

dsl_definitions:
  openstack_configuration: &openstack_configuration
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }
    nova_url: { get_input: nova_url }
    neutron_url: { get_input: neutron_url }

node_templates:

  openstack_keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      use_external_resource: { get_input: use_existing_keypair }
      resource_id: { get_input: keypair_name }
      private_key_path: { get_input: openstack_ssh_key_filename }
      openstack_config: *openstack_configuration

  openstack_server:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_configuration
      install_agent: false
      server:
        image: { get_input: openstack_image_id }
        flavor: { get_input: flavor_id }
      management_network_name: { get_property: [openstack_network, resource_id] }
    relationships:
      - target: openstack_keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: openstack_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: openstack_group_port
        type: cloudify.openstack.server_connected_to_port

outputs:
  compute_resource_ids:
    value:
      server: { get_attribute: [ openstack_server, external_id ] }
      private_ip: { get_attribute: [ openstack_server, ip ] }
