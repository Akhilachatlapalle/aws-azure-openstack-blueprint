tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-azure-plugin/master/plugin.yaml
  - azure-network-blueprint.yaml
  - azure-storage-blueprint.yaml

inputs:

  availability_set_name:
    default: cfyaset01

  server_name:
    default: cfysn01

  size:
    type: string
    default: Standard_A3

  os_family:
    type: string
    default: linux

  image_publisher:
    type: string
    default: OpenLogic

  image_offer:
    type: string
    default: CentOS

  image_sku:
    type: string
    default: '7.0'

  image_version:
    type: string
    default: latest

  os_username:
    type: string
    default: centos

  os_password:
    type: string
    default: cmVV2h3wKt

  os_public_keys:
    type: string

  os_public_key_auth_only:
    type: boolean
    default: true

dsl_definitions:

  azure_config: &AZURE_CONFIG
    subscription_id: { get_input: subscription_id }
    tenant_id: { get_input: tenant_id }
    client_id: { get_input: client_id }
    client_secret: { get_input: client_secret }

node_templates:

  cloudify_vm_public_ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      name: {concat:[{get_input: server_name},pip]}
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: *AZURE_CONFIG
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: cloudify_resource_group

  cloudify_availability_set:
    type: cloudify.azure.nodes.compute.AvailabilitySet
    properties:
      name: { get_input: availability_set_name }
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: *AZURE_CONFIG
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: cloudify_resource_group

  cloudify_vm_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      name: {concat:[{get_input: server_name},ipcfg]}
      location: { get_input: location }
      azure_config: *AZURE_CONFIG
      retry_after: { get_input: retry_after }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
    - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
      target: cloudify_private_subnet
    - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
      target: cloudify_vm_public_ip

  cloudify_vm_nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      name: {concat:[{get_input: server_name},nic]}
      location: { get_input: location }
      azure_config: *AZURE_CONFIG
      retry_after: { get_input: retry_after }
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: cloudify_resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: cloudify_network_security_group
    - type: cloudify.azure.relationships.connected_to_ip_configuration
      target: cloudify_vm_ip_cfg

  cloudify_vm:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      name: { get_input: server_name }
      location: { get_input: location }
      retry_after: { get_input: retry_after }
      azure_config: *AZURE_CONFIG
      os_family: { get_input: os_family }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference:
            publisher: { get_input: image_publisher }
            offer: { get_input: image_offer }
            sku: { get_input: image_sku }
            version: { get_input: image_version }
        osProfile:
          computerName: { get_property: [SELF, name] }
          adminUsername: { get_input: os_username }
          adminPassword: { get_input: os_password }
          linuxConfiguration:
            ssh:
              publicKeys: { get_input: os_public_keys }
            disablePasswordAuthentication: { get_input: os_public_key_auth_only }
      agent_config:
        install_method: none
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: cloudify_resource_group
    - type: cloudify.azure.relationships.connected_to_storage_account
      target: cloudify_storage_account
    - type: cloudify.azure.relationships.connected_to_nic
      target: cloudify_vm_nic
