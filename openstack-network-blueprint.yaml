tosca_definitions_version: cloudify_dsl_1_3


imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.4/plugin.yaml

inputs:

  keystone_username:
    default: ''
    type: string

  keystone_password:
    default: ''
    type: string

  keystone_tenant_name:
    default: ''
    type: string

  keystone_url:
    default: ''
    type: string

  region:
    default: ''
    type: string

  nova_url:
    default: ''
    type: string

  neutron_url:
    default: ''
    type: string

  external_network_name:
    type: string

  openstack_public_subnet:
    default: 172.16.0.0/16

  security_group_name:
    default: cloudify-manager-group

dsl_definitions:
  openstack_configuration: &openstack_configuration
    username: { get_input: keystone_username }
    password: { get_input: keystone_password }
    tenant_name: { get_input: keystone_tenant_name }
    auth_url: { get_input: keystone_url }
    region: { get_input: region }
    nova_url: { get_input: nova_url }
    neutron_url: { get_input: neutron_url }

node_templates:

  external_network:
    type: cloudify.openstack.nodes.Network
    properties:
      use_external_resource: true
      resource_id: { get_input: external_network_name }
      openstack_config: *openstack_configuration

  openstack_network_router:
    type: cloudify.openstack.nodes.Router
    properties:
      resource_id: cloudify-network-router
      openstack_config: *openstack_configuration
    relationships:
      - target: external_network
        type: cloudify.relationships.connected_to

  openstack_network:
    type: cloudify.openstack.nodes.Network
    properties:
      resource_id: cloudify-network
      openstack_config: *openstack_configuration

  openstack_subnet:
    type: cloudify.openstack.nodes.Subnet
    properties:
      resource_id: cloudify-subnet
      subnet:
        ip_version: 4
        cidr: { get_input: openstack_public_subnet }
        dns_nameservers:  [8.8.4.4, 8.8.8.8]
      openstack_config: *openstack_configuration
    relationships:
      - target: openstack_network
        type: cloudify.relationships.contained_in
      - target: openstack_network_router
        type: cloudify.openstack.subnet_connected_to_router

  openstack_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      floatingip:
        floating_network_name: { get_input: external_network_name }
      openstack_config: *openstack_configuration

  openstack_agent_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      resource_id: cloudify-group
      security_group:
        description: Security group for Cloudify agent VMs
      rules:
        - port: 22
          remote_ip_prefix: { get_property: [openstack_subnet, subnet, cidr] }
        - port: 5985
          remote_ip_prefix: { get_property: [openstack_subnet, subnet, cidr] }
      openstack_config: *openstack_configuration

  openstack_manager_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_configuration
      resource_id: { get_input: security_group_name }
      rules:
        - port: 22
          remote_ip_prefix: 0.0.0.0/0
        - port: 80
          remote_ip_prefix: 0.0.0.0/0
        - port: 443
          remote_ip_prefix: 0.0.0.0/0
        - port: 8101
          remote_ip_prefix: { get_input: openstack_public_subnet }
        - port: 5672
          remote_ip_prefix: { get_input: openstack_public_subnet }
        - port: 5985
          remote_ip_prefix: { get_input: openstack_public_subnet }
        - port: 53229
          remote_ip_prefix: { get_input: openstack_public_subnet }

  openstack_group_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *openstack_configuration
      resource_id: cloudify-group-port
    relationships:
      - type: cloudify.relationships.contained_in
        target: openstack_network
      - type: cloudify.relationships.depends_on
        target: openstack_subnet
      - type: cloudify.openstack.port_connected_to_security_group
        target: openstack_manager_group

outputs:
  network_resource_ids:
    value:
      router: { get_attribute: [ openstack_network_router, external_id ] }
      network: { get_attribute: [ openstack_network, external_id ] }
      subnet: { get_attribute: [ openstack_subnet, external_id ] }
      manager_group: { get_attribute: [ openstack_manager_group, external_id ] }
      agent_group: { get_attribute: [ openstack_agent_group, external_id ] }
      port: { get_attribute: [ openstack_group_port, external_id ] }
      public_ip: { get_attribute: [ openstack_ip, floating_ip_address ] }
