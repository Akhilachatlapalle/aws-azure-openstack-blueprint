tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.4.1/plugin.yaml
  - aws-network-blueprint.yaml

inputs:

  image_id:
    default: ami-fce3c696

  instance_type:
    default: m3.medium

  use_existing_keypair:
    type: boolean
    default: false

  keypair_name:
    type: string
    default: aws-composed-kp

  ssh_key_filename:
    type: string
    default: ~/.ssh/aws-composed-kp.pem

  port:
    type: string
    default: 8080

  security_group_name:
    type: string
    default: aws-composed-sg

node_templates:

  server:
    type: cloudify.aws.nodes.Instance
    properties:
      image_id: { get_input: image_id }
      instance_type: { get_input: instance_type }
      parameters:
        placement: { get_property: [ subnet, availability_zone ] }
      aws_config: *AWS_CONFIG
    relationships:
      - type: cloudify.aws.relationships.instance_contained_in_subnet
        target: subnet
      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: security_group
      - type: cloudify.aws.relationships.instance_connected_to_keypair
        target: keypair
      - type: cloudify.aws.relationships.instance_connected_to_elastic_ip
        target: ip

  ip:
    type: cloudify.aws.nodes.ElasticIP
    properties:
      aws_config: *AWS_CONFIG
      domain: vpc
    relationships:
      - type: cloudify.relationships.depends_on
        target: internet_gateway

  keypair:
    type: cloudify.aws.nodes.KeyPair
    properties:
      use_external_resource: { get_input: use_existing_keypair }
      resource_id: { get_input: keypair_name }
      private_key_path: { get_input: ssh_key_filename }
      aws_config: *AWS_CONFIG

  security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      aws_config: *AWS_CONFIG
      resource_id: { get_input: security_group_name }
      rules:
        - ip_protocol: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - ip_protocol: tcp
          from_port: { get_input: port }
          to_port: { get_input: port }
          cidr_ip: 0.0.0.0/0
    relationships:
      - type: cloudify.aws.relationships.security_group_contained_in_vpc
        target: vpc
